spring:
  application:
    name: sample
  profiles:
    active: local
  output:
    ansi:
      enabled: always #console log에 색상으로 표시 되도록 하는 옵션
  datasource:
    url: jdbc:h2:mem:hellojpa
    username: sa
    password: 1
  h2:
    console:
      enabled: true
      path: /h2-console
  config:
    import: optional:classpath:test-config.yml
  #첨부파일 업로드 관련
  servlet:
    multipart:
      # 멀티파트 업로드시 임시파일 경로
      # fileSizeThreshold: 0
      max-file-size: 100MB # upload file 크기제한(1개파일 크기)
      max-request-size: 100MB # upload file 크기제한( 한번의 요청에 올릴 수 있는 최대 크기 )

#springdoc:
#  swagger-ui:
#    path: /swagger
#  use-fqn: true

#springdoc:
#  api-docs:
#    path: /v3/api-docs
#  swagger-ui:
#    path: /swagger-ui.html

# 스웨거 설정
#com:
#  swagger:
#    group-enabled: true
#    group:
#      package-scan: com.framework.first
#    headers-enable: true
#    headers:
#      user-id:
#        required: true
#        description: 아이디
#        example: abc123
#    secure-params-enable: true
#    secure-params:
#      Authorization:
#        description: Authorization-desc
#        value: test-value
#      abc:
#        description: abc-desc
#        value: test-abc1
#      def:
#        description: def-desc
#        value: test-def2

#test:
#  svc:
#    soketip: localhost
#    soketport : 8080

# actuator설정
#management:
#  endpoints:
#    web:
#      exposure:
##        include: "*"
#        include: "heaalth, loggers, info, mappings"
##  info:
##    env:
##      enabled: true

#send:
#  feign:
#    url: localhost:8080
#  framework:
#    api-key: "abc"

# 첨부파일 관련
#file:
#  props:
#    info:
#      base-path: /file/upload/sample
#      target-prefix: sample
#      allowed-extensions:
#        - jpg
#        - txt
#        - png
#        - ppt
#        - pptx
#        - pdf

# 환경별로 로그레벨 및 설정이 다를 수 있음
logging:
#  file:
#    name: "logs\application.log"
  level:
    root: INFO
    com.myprj.sample: DEBUG
    jdbc.sqlonly: OFF
    jdbc.sqltiming: INFO
    jdbc.audit: OFF
    jdbc.resultset: OFF
    jdbc.connection: OFF
    jdbc.resultsettable: INFO
  pattern:
    console: "[%clr(%X{REQUEST_GUID}){cyan}][%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%clr(%thread){blue}][%clr(%-5level)][%clr(%logger{36}){magenta}]-%clr(%msg%n)"
#    아래는 maskMsg 함수를 호출하여 로그에 마스킹 처리할때 사용한다.
#    console: "[%clr(%X{REQUEST_GUID}){cyan}][%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%clr(%thread){blue}][%clr(%-5level)][%clr(%logger{36}){magenta}]-%clr(%maskMsg(%msg%n))"


#  pattern:
#    console: "[%clr(%X{REQUEST_GUID}){cyan}][%d{yyyy-MM-dd HH:mm:ss}:%-3relative]"